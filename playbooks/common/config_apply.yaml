---
- name: Set indy.release based on the passed in parameter
  set_fact:
    indy: "{{ indy | combine({'release': (IMAGETAG|default('latest')) + ''}) }}"

- name: Make sure that working directory exists
  file:
    path: "{{ pjroot }}/vars/run"
    state: "directory"
    mode: 0775

- name: Check if node vars available
  stat:
    path: "{{ pjroot }}/vars/node_vars.json"
  register: envflag

- name: "Load node vars"
  when: envflag.stat.exists == true
  include_vars: "{{ pjroot }}/vars/node_vars.json"

- name: Process spec file to generate various variables
  when: envflag.stat.exists == false
  block:
  - name: Set indy.release based on the passed in parameter
    set_fact:
      allvalidators: "{{ [] }}"
      nodeport: '0'

  - name: Set up starting node port
    set_fact:
      nodeport: "{{ ((EXPOSE_ENDPOINTS|lower) == 'true') | ternary(7000, EXPOSE_ENDPOINTS|int) }}"
      ipaddr: "{{ endpoint_address }}"
    when: (EXPOSE_ENDPOINTS|lower) != 'false'

  - name: When not expose endpoints
    when: nodeport == '0'
    block:
    - name: Get all validator object list
      set_fact:
        allvalidators: |
          {{ allvalidators + [{ 'org':item.split('.')[1:] | join("."), 'portmap':'',
            'url': item, 'port': '9701', 'mspid': item.split('.')[1:] | join('-'),
            'name':item.split('.')[0], 'fullname': item, 'type': 'validator' }] }}
      with_items: "{{ indy.validators }}"
      when: indy.validators is defined

  - name: When expose endpoints
    when: nodeport != '0'
    block:
    - name: Get all validator object list
      set_fact:
        allvalidators: |
          {{ allvalidators + [{ 'org':item.split('.')[1:] | join("."),
            'url': ipaddr, 'port': nodeport, 'oport': (nodeport|int+1000)|string,
            'portmap':'-p '+nodeport+':9701 -p '+((nodeport|int+1000)|string)+':9711',
            'mspid': item.split('.')[1:] | join('-'),
            'name':item.split('.')[0], 'fullname': item, 'type': 'validator' }] }}
        nodeport: "{{ nodeport|int + 1 }}"
      with_items: "{{ indy.validators }}"
      when: indy.validators is defined

  - name: Fix possible misconfiguration issues
    set_fact:
      allvalidators: "{{ allvalidators | rejectattr('fullname', 'equalto', '') | list }}"

  - name: Get validator orgs
    set_fact:
      validatororgs: "{{ allvalidators | default([]) | map(attribute='org') | list  | unique | sort }}"

  - name: Create all orgs list
    set_fact:
      allorgs: "{{ (validatororgs) | sort | unique }}"

  - name: Set up starting node port when all nodes private
    set_fact:
      nodeport: "7200"
    when: (EXPOSE_ENDPOINTS|lower) == 'false'

  - name: Produce the node env file
    copy:
      dest: "{{ pjroot }}/vars/node_vars.json"
      content: >-
        {{ {'allvalidators': allvalidators, 'validatororgs': validatororgs, 'allorgs': allorgs } | to_nice_json(indent=2) }}
